name: "Next.js Bundle Analysis"

on:
  pull_request:
    branches:
      - main # Trigger on PRs to `main` from `dev`
  push:
    branches:
      - dev # Trigger on pushes to `dev`

defaults:
  run:
    working-directory: ./

permissions:
  contents: read # Required for repository checkout
  actions: read # Required for accessing workflows
  pull-requests: write # For commenting on PRs

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies
      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      # Restore Next.js build cache
      - name: Restore next build cache
        uses: actions/cache@v3
        id: restore-build-cache
        env:
          cache-name: cache-next-build
        with:
          path: .next/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      # Build the Next.js app
      - name: Build Next.js app
        run: ./node_modules/.bin/next build

      # Analyze bundle for the `dev` branch
      - name: Analyze bundle
        run: |
          mkdir -p .next/analyze
          npx -p nextjs-bundle-analysis report

      # Debugging: Verify analyze directory and file
      - name: Debug Analyze Directory
        run: |
          echo "Contents of .next/analyze directory:"
          ls -la .next/analyze || echo "Analyze directory not created."

      # Upload bundle analysis artifact on `dev` branch
      - name: Upload bundle analysis artifact
        if: github.ref_name == 'dev'
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: .next/analyze/__bundle_analysis.json

      # Compare bundle during a PR to `main`
      - name: Download dev branch bundle stats
        if: github.event_name == 'pull_request'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: Next.js Bundle Analysis
          name: bundle-analysis
          branch: dev # Reference the `dev` branch artifact
          path: .next/analyze/base

      # Ensure base directory exists for safety
      - name: Verify Downloaded Dev Artifacts
        if: github.event_name == 'pull_request'
        run: |
          echo "Checking for base directory from dev..."
          ls -laR .next/analyze/base || (echo "Dev base directory not found. Exiting..." && exit 1)

      # Compare `dev` bundle with `main`
      - name: Compare with Main Branch Bundle
        if: github.event_name == 'pull_request'
        run: |
          if [ -f ".next/analyze/base/__bundle_analysis.json" ]; then
            npx -p nextjs-bundle-analysis compare
          else
            echo "Base artifact for comparison not found. Skipping."
          fi

      # Debug: Verify contents of analyze directory
      - name: Debug Download Artifact
        if: github.event_name == 'pull_request'
        run: |
          echo "Contents of .next/analyze directory after download:"
          ls -la .next/analyze || echo "Analyze directory does not exist."

      # Post analysis results as a comment on the PR
      - name: Get Comment Body
        id: get-comment-body
        if: github.event_name == 'pull_request'
        run: |
          if [ -f ".next/analyze/__bundle_analysis_comment.txt" ]; then
            echo "body<<EOF" >> $GITHUB_OUTPUT
            cat .next/analyze/__bundle_analysis_comment.txt >> $GITHUB_OUTPUT
            echo EOF >> $GITHUB_OUTPUT
          else
            echo "Bundle analysis comment file not found."
            exit 1
          fi

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "<!-- __NEXTJS_BUNDLE -->"

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
